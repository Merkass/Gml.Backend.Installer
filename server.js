const http = require('http');
const fs = require('fs');
const path = require('path');

const PORT = process.env.PORT || 5000;

// HTML –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const indexHTML = `
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GML Launcher - Render</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .status {
            color: #28a745;
            font-weight: bold;
        }
        .info {
            background: #e9ecef;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
        }
        .btn {
            background: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üéÆ GML Launcher</h1>
        <p class="status">‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç</p>
        
        <div class="info">
            <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ:</h3>
            <p><strong>–ü–æ—Ä—Ç:</strong> ${PORT}</p>
            <p><strong>–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:</strong> ${new Date().toLocaleString('ru-RU')}</p>
            <p><strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> Render.com</p>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ</p>
        </div>
        
        <h3>–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:</h3>
        <ul>
            <li><a href="/health" class="btn">Health Check</a></li>
            <li><a href="/api/status" class="btn">API Status</a></li>
            <li><a href="/admin" class="btn">–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</a></li>
        </ul>
        
        <div class="info">
            <h3>–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h3>
            <p>1. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π GML Backend</p>
            <p>2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</p>
            <p>3. –î–æ–±–∞–≤—å—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é</p>
            <p>4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ</p>
        </div>
    </div>
</body>
</html>
`;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
const server = http.createServer((req, res) => {
    const url = req.url;
    const method = req.method;
    
    console.log(`${method} ${url} - ${new Date().toISOString()}`);
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ CORS –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤
    if (method === 'OPTIONS') {
        res.writeHead(200);
        res.end();
        return;
    }
    
    // –†–æ—É—Ç–∏–Ω–≥
    switch (url) {
        case '/':
            res.writeHead(200, { 'Content-Type': 'text/html; charset=utf-8' });
            res.end(indexHTML);
            break;
            
        case '/health':
            res.writeHead(200, { 'Content-Type': 'application/json' });
            res.end(JSON.stringify({ 
                status: 'healthy', 
                timestamp: new Date().toISOString(),
                port: PORT,
                uptime: process.uptime()
            }));
            break;
            
        case '/api/status':
            res.writeHead(200, { 'Content-Type': 'application/json' });
            res.end(JSON.stringify({
                service: 'GML Launcher',
                version: '1.0.0',
                status: 'running',
                platform: 'Render.com',
                node_version: process.version,
                memory_usage: process.memoryUsage(),
                uptime: process.uptime()
            }));
            break;
            
        case '/admin':
            res.writeHead(200, { 'Content-Type': 'text/html; charset=utf-8' });
            res.end(`
                <!DOCTYPE html>
                <html>
                <head>
                    <title>GML Admin</title>
                    <style>
                        body { font-family: Arial, sans-serif; margin: 40px; }
                        .admin-panel { background: #f8f9fa; padding: 20px; border-radius: 8px; }
                    </style>
                </head>
                <body>
                    <div class="admin-panel">
                        <h2>üîß GML Launcher - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>
                        <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è GML Launcher</p>
                        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
                        <a href="/">‚Üê –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
                    </div>
                </body>
                </html>
            `);
            break;
            
        default:
            res.writeHead(404, { 'Content-Type': 'text/html; charset=utf-8' });
            res.end(`
                <html>
                <body>
                    <h1>404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
                    <p>–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${url} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>
                    <a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
                </body>
                </html>
            `);
    }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
server.listen(PORT, '0.0.0.0', () => {
    console.log(`üöÄ GML Launcher —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üì° –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://0.0.0.0:${PORT}`);
    console.log(`‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${new Date().toLocaleString('ru-RU')}`);
});

// Graceful shutdown
process.on('SIGTERM', () => {
    console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
    server.close(() => {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(0);
    });
});

process.on('SIGINT', () => {
    console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...');
    server.close(() => {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(0);
    });
});
